(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{228:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"函数式编程——underscore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程——underscore"}},[t._v("#")]),t._v(" 函数式编程——underscore")]),t._v(" "),s("h2",{attrs:{id:"函数式编程基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程基础知识"}},[t._v("#")]),t._v(" 函数式编程基础知识")]),t._v(" "),s("h3",{attrs:{id:"特征："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特征："}},[t._v("#")]),t._v(" 特征：")]),t._v(" "),s("ul",[s("li",[t._v("1、纯函数，对于相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用，也不依赖外部环境的状态。eg：数学公式y=F(X)；在JavaScript中，对于数组的操作，有些是纯的，有些是不纯的。")]),t._v(" "),s("li",[t._v("2、函数柯里化：定义：向函数传递一部分参数来调用它，让它返回一个函数去处理剩下的参数。事实上，柯里化是一种“预加载”函数的方法，通过传递较少的参数，得到一个已经记住了这些参数的新函数，某种意义上讲，这是一种对参数的“缓存”，是一种非常高效的编写函数的方法。")]),t._v(" "),s("li",[t._v("3、函数组合：为避免写出不优雅的包菜式代码h(g(f(x))),我们需要用到函数组合，我们定义的compose就像双面胶一样，可以把任何两个纯函数结合到一起，"),s("em",[t._v("（传参形式？第一节课7分10秒）")])])]),t._v(" "),s("h3",{attrs:{id:"声明式与命令式："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明式与命令式："}},[t._v("#")]),t._v(" 声明式与命令式：")]),t._v(" "),s("ul",[s("li",[t._v("命令式代码：通过编写一条又一条指令，让计算机执行一些动作，其中一般会涉及许多繁杂的细节。")]),t._v(" "),s("li",[t._v("声明式代码：通过写表达式的方式，声明我们想干什么，而不是通过一步一步的指示。声明式代码，是函数式编程的一个明显好处——编写、优化代码时能更专注。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("函数对于外部状态的依赖，是造成系统复杂性大大提高的主要原因。代码书写中让函数尽可能的纯净，函数式编程不是万能的，它与oop一样，只是一种编程范式。为降低软件复杂度，oop的方式是靠良好的封装、继承、多态、以及接口定义。函数式编程则是靠纯函数以及他们的组合、柯里化等技术。")])]),t._v(" "),s("h2",{attrs:{id:"underscore的整体设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#underscore的整体设计"}},[t._v("#")]),t._v(" underscore的整体设计")]),t._v(" "),s("ul",[s("li",[t._v("作用域报过，也是通过立即执行函数来包裹自己的业务逻辑，避免全局污染，隐私保护。(function(){执行逻辑})();")]),t._v(" "),s("li",[t._v("对象：通过一个下划线变量_来标识自身。"),s("em",[t._v("是一个函数对象，所有的api都会被挂载到这个对象上，如")]),t._v(".map ，_.each；")]),t._v(" "),s("li",[t._v("对面向对象的支持；"),s("em",[t._v("(),通过")]),t._v("()来包裹一个对象，会创建一个新的underscore对象，就能够调用underscore提供的方法，并在"),s("code",[t._v("this.warpped")]),t._v("中存储传入的数据。类似jQuery的 $()包裹进去。")]),t._v(" "),s("li",[t._v("扩展：通过mixin混入；")]),t._v(" "),s("li",[t._v("支持链式调用。"),s("code",[t._v("_.chain()")]),t._v(":为underscore对象的方法增加链式调用能力。")])]),t._v(" "),s("h2",{attrs:{id:"条件查询，背后索引器实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件查询，背后索引器实现"}},[t._v("#")]),t._v(" 条件查询，背后索引器实现")]),t._v(" "),s("p",[t._v("underscore中通过内置的工厂函数createIndexFinder来创建一个索引查询器。 "),s("code",[t._v("_.indexOf")]),t._v("及 "),s("code",[t._v("_.lastIndexOf")]),t._v("正是由该函数所创建的；"),s("br"),t._v("\ncreateIndexFinder接收三个参数,用来创建indexOf跟lastIndexOf;")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("_.indexOf(array,item , sorted)")]),t._v("查询array在coll中第一次出现的位置。"),s("code",[t._v("_.indexOf")]),t._v("方法的创建过程中，被传递了"),s("code",[t._v("_.findindex")]),t._v("作为元素的直值预测函数，以及"),s("code",[t._v("_.sortedIndex")]),t._v("作为当数组有序时获得索引的方式。")]),t._v(" "),s("li",[s("code",[t._v("_.lastIndexOf(array,item,sorted)")]),t._v("：查询item在array中最后一次出现的位置。")])]),t._v(" "),s("h2",{attrs:{id:"乱序数组——洗牌算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乱序数组——洗牌算法"}},[t._v("#")]),t._v(" 乱序数组——洗牌算法")]),t._v(" "),s("p",[t._v("算法思路在宏观上可以概括为：将集合视为牌堆，不停的从牌堆中抽牌构成新的牌堆，直至新牌堆的牌数到达预设数量；underscore1.9版本开始，洗牌算法通过"),s("code",[t._v("_.sample")]),t._v("实现；\n"),s("code",[t._v("_.sample(array,n)")]),t._v(":从array随机取出N个样本。 underscore中的抽样函数正基于洗牌算法。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shuffle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//拷贝一份原数组的副本。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sample "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"数组定位与摊平数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组定位与摊平数组"}},[t._v("#")]),t._v(" 数组定位与摊平数组")]),t._v(" "),s("ul",[s("li",[t._v("数组定位："),s("code",[t._v("_.initial（array,n）")]),t._v(":获得array的除了最后N个元素以外的元素。   "),s("code",[t._v(".rest = .tail = .drop")]),t._v(" :  "),s("code",[t._v(".rest(array,n)")]),t._v("返回array中除了前n个元素外的所有元素。")]),t._v(" "),s("li",[t._v("摊平数组："),s("code",[t._v(".flatten(array.shallow)")]),t._v(":摊平array，通过shallow指明是 深度摊平还是浅摊平。深度展开是就全部展开，浅度展开是只展开一层。")])]),t._v(" "),s("h2",{attrs:{id:"去重函数-源码拾遗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去重函数-源码拾遗"}},[t._v("#")]),t._v(" 去重函数&源码拾遗")]),t._v(" "),s("ul",[s("li",[t._v("_.unique 语法："),s("code",[t._v("_.unique(array,isSorted,iteratee)")]),t._v(",根据iteratee设置的重复标准，对array进行去重，通过isSorted，提高对有序数组的去重效率。")]),t._v(" "),s("li",[t._v('_.compact（array）:去除array中所有“假值”项目。在JavaScript中，这些值被认为是假值：false、null、0、""、undefined、NaN；如何验证假值：Boolean（value）；')]),t._v(" "),s("li",[t._v("_.range()函数作用：快速产生一个落在区间范围内的数组。"),s("code",[t._v("_.range(start,stop,step)")]),t._v(":设置步长step，产生一个[start,n]的序列.eg:")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 产生[n,m]内的数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => [1,2,3,4,5,6,7,8,9,10];")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定步长")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// =>[1,3,5,7,9];")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从[0,n)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>[1,2,3,4];")]),t._v("\n")])])]),s("h2",{attrs:{id:"patial偏函数-与-memoize缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patial偏函数-与-memoize缓存"}},[t._v("#")]),t._v(" _.patial偏函数 与 _.memoize缓存")]),t._v(" "),s("ul",[s("li",[s("em",[t._v(".partial:偏函数（partial）反映了新函数是原函数的一部分，underscore的")]),t._v(".partial就能返回一个偏函数。")]),t._v(" "),s("li",[t._v("_.partial(func,……args);应用一个函数，填充在任意个数的参数，不改变其动态this值，和bind方法很近。")]),t._v(" "),s("li",[t._v("_.memoize （fucntion,[hashFunction]）：可以缓存某函数的计算结果，如果传递了hashFunction,就用hashFunction的返回值作为key存储函数的计算结果。hashFunction默认使用function的第一个参数作为key，memorize值得缓存可作为返回函数的cache属性。")])]),t._v(" "),s("h2",{attrs:{id:"补充知识——正则课程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充知识——正则课程"}},[t._v("#")]),t._v(" 补充知识——正则课程")]),t._v(" "),s("ul",[s("li",[t._v("正则表达式：语法：正则是描述一种字符串匹配的模式，可以用来检查一个串是否含有某种子串，将匹配的子串替换或者从某个串中取出符合某个条件的子串等。可以是单个字符、字符集合、字符范围。字符间的选择或者所有这些组件的任意组合。")]),t._v(" "),s("li",[t._v("元字符、限定符、定位符（定位到行首或者行尾等）；")]),t._v(" "),s("li",[t._v("创建正则对象：直接量语法，创建RegExp对象的语法。参数是一个字符串，指定正则表达式的模式或者其他正则表达式（g、i）；")])]),t._v(" "),s("h2",{attrs:{id:"延迟执行函数、字符转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#延迟执行函数、字符转义"}},[t._v("#")]),t._v(" 延迟执行函数、字符转义")]),t._v(" "),s("ul",[s("li",[t._v("延迟执行delay :类似setTimeout ,等待wait毫秒后调用function，如果传递可选的参数arguments，当函数function执行时，arguments 会作为参数传入。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("函数组合：任意函数的组合。compose，借助reduce方法顺序执行相应的函数;")]),t._v(" "),s("li",[t._v("字符串转义escape，转义字符：也有更形象的译名：脱逸字符，逃逸字符。针对某些特定字符串转义并替换为特定字符串，_.escape(string)转义字符串，替换&，<,>,\",'和/字符；")])]),t._v(" "),s("h2",{attrs:{id:"throttle与debounce-概念解析源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#throttle与debounce-概念解析源码分析"}},[t._v("#")]),t._v(" throttle与debounce 概念解析源码分析")]),t._v(" "),s("ul",[s("li",[t._v("throttle和debounce是解决请求和响应速度不匹配问题的两个方案，二者的差异在于选择不同的策略;")]),t._v(" "),s("li",[t._v("debounce的关注点是空闲的间隔时间。")]),t._v(" "),s("li",[t._v("throttle的关注点是连续的执行间隔时间。"),s("br"),t._v(" "),s("strong",[t._v("应用场景")]),t._v("：只要牵涉到连续事件或者频率控制相关的应用都可以考虑到这两个函数，比如：游戏射击、keydown事件、文本输入、自动完成、keyup事件。dom元素动态定位，window对象的resize和scroll事件 前两个debounce和throttle都可以按需使用，后两者肯定用throttle。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("节流")]),t._v("："),s("code",[t._v("_.throttle（function，wait，[options]）")]),t._v("  1.处理函数function是立即执行还是等待wait毫秒后执行？默认立即执行，如果options.leading == false 等待wait毫秒后调动执行。2、回调函数最后一次是否执行？默认会去执行，"),s("code",[t._v("options.trailing == false")]),t._v("，则不会去执行。"),s("br"),t._v(" "),s("strong",[t._v("防抖")]),t._v("："),s("code",[t._v("_.debounce(function ,wait ,[immediate])")]),t._v("; immediate === false 等待wait毫秒后去调动处理函数。Immediate === true 立即执行处理函数。")])]),t._v(" "),s("h2",{attrs:{id:"属性操作-createassigner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性操作-createassigner"}},[t._v("#")]),t._v(" 属性操作&createAssigner")]),t._v(" "),s("p",[s("strong",[t._v("对象的属性操作")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("检测是否有某个key属性：  has（obj，key） =>true / false;")]),t._v(" "),s("li",[t._v('获取obj对象上所有可枚举属性的名称  keys（obj） => ["name"]')]),t._v(" "),s("li",[t._v('获取obj对象上所有可枚举的属性的值  values(obj) => ["max];')]),t._v(" "),s("li",[t._v("属性跟值进行替换，                 invert（obj） => {max : name}")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Object.keys() 在es5规范中存在，但是有兼容性问题，在IE9以下的版本有问题。且keys只能输出自身的属性，无法查找到原型链上的属性。\nFor in 可以找到自身属性以及可枚举的属性。但是在IE9以下：若将原型上的方法进行重构，会无法查询到扩展的方法。")])]),t._v(" "),s("p",[t._v("createAssigner underscore中提供了两个方法用于对象属性的扩展。"),s("code",[t._v("_.extend")]),t._v(" ; "),s("code",[t._v("_.extendOwn")]),t._v(";这两个函数都是内部函数createAssigner进行创建的。createAssigner接受两个参数：keysFunc：获得对象属性的方式；defaults：声明是否要覆盖属性。返回一个属性分配器。")])])}),[],!1,null,null,null);a.default=n.exports}}]);