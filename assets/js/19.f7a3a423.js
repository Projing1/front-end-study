(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{224:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jquery源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jquery源码分析"}},[t._v("#")]),t._v(" Jquery源码分析")]),t._v(" "),s("h2",{attrs:{id:"jquery整体架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jquery整体架构"}},[t._v("#")]),t._v(" Jquery整体架构")]),t._v(" "),s("p",[t._v("$是jquery的别称。$()就是在创建jQuery的实例对象；\njQuery的共享原型模式：将jquery的原型对象上的init方法的原型对象指向jQuery的原型对象；即：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("jQuery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jQuery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"jquery选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jquery选择器"}},[t._v("#")]),t._v(" Jquery选择器")]),t._v(" "),s("p",[t._v("DOM对象：是由宿主环境提供的对象，在文档对象模型中，每个部分都是节点。如：所有HTML元素是元素节点，而element对象表示HTML元素。HTML DOM Element对象可以拥有类型为：元素节点，文本节点，注释节点的子节点。")]),t._v(" "),s("p",[t._v("jQuery对象：jQuery构造函数创建出来的对象，通过jQuery选择器可以获取HTML的元素，并且以一种类数组的形式存储在jQuery对象中。")]),t._v(" "),s("p",[t._v("element对象转化为jQuery对象：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("jquery对象转化为element对象：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" box "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("常用的jquery选择器接口：$()：")]),t._v(" "),s("ul",[s("li",[t._v("传入对象，如this等，把传入的对象包装成jQuery对象，")]),t._v(" "),s("li",[t._v("传入函数,立即执行函数，相当于在DOM加载完毕后执行了"),s("code",[t._v("$(document).ready()")]),t._v("方法。")]),t._v(" "),s("li",[t._v("传入字符串，查询DOM节点包装成jQuery对象；")]),t._v(" "),s("li",[t._v("传入HTML字符串，创建DOM节点包装成jquery对象，")]),t._v(" "),s("li",[t._v("空，则创建jQuery对象；")])]),t._v(" "),s("h2",{attrs:{id:"callbacks入门与实践应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#callbacks入门与实践应用"}},[t._v("#")]),t._v(" callbacks入门与实践应用")]),t._v(" "),s("p",[t._v("$.Callbacks用于管理函数队列。\n通过add添加处理函数到队列中，通过fire去执行这些处理函数。"),s("br"),t._v("\n$.Callbacks是在jquery内部使用的，如.ajax,$Deferred等组件提供基础功能的函数。它也可以用在类似功能的一些组件中，如自己开发的插件。"),s("br"),t._v(" "),s("strong",[t._v("API")]),t._v("：通过$.Callbacks，获取到一个Callbacks实例。add向内部队列添加函数，fire依次执行队列里的函数。"),s("br"),t._v("\n$.Callbacks通过字符串参数的形式，支持4种的特定功能。")]),t._v(" "),s("ul",[s("li",[t._v("once：函数队列中的函数只执行一次；")]),t._v(" "),s("li",[t._v("unique：往内部队列添加的函数保持唯一，不能重复添加。")]),t._v(" "),s("li",[t._v("stopOnFalse：内部队列里的函数是依次执行的，当某个函数的返回值是false时，停止继续执行剩下的函数。")]),t._v(" "),s("li",[t._v("memory：当函数队列fire一次过后，内部会记录当前fire的参数，当下次调用add的时候，会把记录的参数传递给新添加的函数并立即执行这个新添加的函数。"),s("br"),t._v(" "),s("code",[t._v("toString.call()")]),t._v(";方法可以进行数据类型检测。"),s("br"),t._v(" "),s("code",[t._v("split（）")]),t._v("，用于把字符串分割为数组，传参是一个正则表达式，以匹配到的那个字符进行分割；")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("fireWith中调用fire(args)为啥不会执行到self中的fire？"),s("br"),t._v("\n关于函数调用，有些地方需要function（options）{}，这种方式传入，有些地方又没有传，function(){},这种调用，然后通过arguments获得参数，有啥区别？")])]),t._v(" "),s("h2",{attrs:{id:"deferred概念-or-源码解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deferred概念-or-源码解析"}},[t._v("#")]),t._v(" deferred概念 or 源码解析")]),t._v(" "),s("p",[t._v("Promise/A+规范 or Deferred；\nPromise作为一个模型，提供了一个在软件工程中描述延时（或将来）概念的解决方案；而Derferred是这种规范的具体实现。")]),t._v(" "),s("ul",[s("li",[t._v("Promise表示一个异步操作的最终结果。")]),t._v(" "),s("li",[t._v("与Promise最主要的交互方法是，通过将函数传入它的then方法，从而获取得Promise最终的值或Promise最终拒绝（reject）的原因。")]),t._v(" "),s("li",[t._v("一个Promise必须处于以下状态的其中之一：pending，fulfilled或rejected。")]),t._v(" "),s("li",[t._v("一个Promise必须提供一个then方法来获取其值或原因。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("this指的是函数执行的环境，1.作为函数调用，2.对象的方法调用，3、构造函数使用，4、call、apply中使用。"),s("br"),t._v("\napply、call是Function的prototype上的函数，"),s("code",[t._v("fn.call();fn.apply()")]),t._v("都是调用函数，可以改变内部this的指向。"),s("br"),t._v("\ncall传参的时候是一一对应的，apply是传数组的，然后数组的下标一一对应参数。")])]),t._v(" "),s("h2",{attrs:{id:"时间绑定bind-delegate-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间绑定bind-delegate-on"}},[t._v("#")]),t._v(" 时间绑定bind/delegate/on")]),t._v(" "),s("p",[t._v("DOM事件模型："),s("br"),t._v(" "),s("strong",[t._v("0级事件")]),t._v("：通过JavaScript指定事件处理程序的传统方式，就是将一个函数赋值给一个事件处理程序属性。"),s("br"),t._v(" "),s("strong",[t._v("2级事件")]),t._v("：2级DOM中增加定义了DOM事件模型的概念，DOM2级事件规定的时间流包括3个阶段：事件捕获阶段，处于目标阶段和事件冒泡阶段，首先的是时间捕获，然后处于目标阶段，最后才是事件冒泡。"),s("br"),t._v(" "),s("strong",[t._v("事件委托")]),t._v("：利用事件冒泡，只指定一个事件处理程序来管理某一类型的所有事件。委托父级元素代理执行子元素的事件。"),s("br"),t._v(" "),s("strong",[t._v("bind()")]),t._v("：为被选元素添加一个或多个事件处理程序，并规定事件发生时运行的函数；"),s("br"),t._v(" "),s("strong",[t._v("Delegate()")]),t._v(":为被选元素的子元素，添加一个或多个事件处理程序。并规定当这些事件发生时运行的函数。\n"),s("strong",[t._v("On()")]),t._v("：在被选元素及子元素上添加一个或多个事件处理程序。")]),t._v(" "),s("h2",{attrs:{id:"事件体系绑定，体系结构-绑定设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件体系绑定，体系结构-绑定设计"}},[t._v("#")]),t._v(" 事件体系绑定，体系结构/绑定设计")]),t._v(" "),s("p",[s("strong",[t._v("on方法源码分析，事件绑定原型设计")]),t._v("。"),s("br"),t._v("\njQuery事件设计原型：jQuery并没有将事件处理函数直接绑定在DOM元素上，而是通过"),s("code",[t._v("jQuery.event.add")]),t._v("存储在cahce缓存对象上，最后在DOM元素上通过"),s("code",[t._v("addEventListener/attachEvent")]),t._v("绑定事件，当事件触发时，eventHandle被执行，eventHandle再去$.cache中寻找曾经绑定的事件处理函数并执行，对应jQuery中event对象上的jQuery.Event.add（给选中元素注册事件处理程序）、"),s("code",[t._v("jQuery.Event.dispatch（执行事件处理程序）")]),t._v("、"),s("code",[t._v("jQuery.Event.fix(event兼容性处理)")]),t._v("、"),s("code",[t._v("jQuery.Event.handlers（事件处理器队列）")]),t._v("；")]),t._v(" "),s("h2",{attrs:{id:"自定义事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件"}},[t._v("#")]),t._v(" 自定义事件")]),t._v(" "),s("p",[t._v("jQuery事件以及JavaScript事件不能满足开发需求，就需要自己编写相应的事件，")]),t._v(" "),s("ul",[s("li",[t._v("添加自定义事件：通过jQuery的bind或者on方法添加自定义事件，")]),t._v(" "),s("li",[t._v("触发自定义事件：通过jQuery的trigger方法触发自定义事件，")]),t._v(" "),s("li",[t._v("trigger方法触发事件后，会执行浏览器的默认行为。如：聚焦；")])]),t._v(" "),s("h2",{attrs:{id:"dom操作方法：html-text-css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom操作方法：html-text-css"}},[t._v("#")]),t._v(" DOM操作方法：html-text-css;")]),t._v(" "),s("p",[t._v("html-text-css作用：")]),t._v(" "),s("ul",[s("li",[t._v("html用来读取和修改元素的标签；")]),t._v(" "),s("li",[t._v("text用来读取修改元素的纯文本内容；")]),t._v(" "),s("li",[t._v("css用来设置或返回被选元素的一个或多个样式属性。三个方法都是通过jquery.access提供底层支持，jQuery.access;")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("让局部作用域的变量不销毁的方法：让一个全局变量拿到一个函数内部返回对象的引用。")])]),t._v(" "),s("h2",{attrs:{id:"样式操作css-addclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样式操作css-addclass"}},[t._v("#")]),t._v(" 样式操作css/addClass")]),t._v(" "),s("p",[s("strong",[t._v("样式规则")]),t._v("：内部属性名采用的是驼峰命名，保留关键字float环城CSSFloat，合并cssText;"),s("br"),t._v(" "),s("strong",[t._v("样式访问")]),t._v("：getComputedStyle改方法返回包含元素的所有属性值得对象;"),s("br"),t._v(" "),s("strong",[t._v("Css()源码")]),t._v("：style只能访问到行内style定义的属性。"),s("br"),t._v(" "),s("strong",[t._v("addclass（）")]),t._v(":对元素添加一个或者多个class。"),s("br"),t._v(" "),s("strong",[t._v("DomManip")]),t._v(":元老级工具函数，最主要功能是为了实现dom的插入和替换，主要是以下五个函数：append()在结尾插入。\nPrepend()在元素开始地方插入。Before()跟after相反，在元素前面插入内容；after()在被选元素之后插入内容。replaceWith()替换元素；"),s("br"),t._v(" "),s("strong",[t._v("domMainp实现")]),t._v("：domManip完成两件事：1、DOM节点添加，2、检测DOM节点内有script标签。特殊处理。\n"),s("strong",[t._v("domManip内对script做的特殊处理")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("script无type属性，默认会执行其内的JavaScript脚本。")]),t._v(" "),s("li",[t._v("script如果有src属性，会调用"),s("code",[t._v("$._evelUrl")]),t._v("请求JavaScript文件并执行。")]),t._v(" "),s("li",[t._v("script的"),s("code",[t._v('type="text/javascript"')]),t._v("会执行其内的JavaScript脚本，其他不会执行。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("domManip依赖的一个重要函数就是bulidFragment，为DOM插入提高性能。\nbuildFrag作用：这个方法用来构建一个包含子节点fragment对象，主要在DOMManip和"),s("code",[t._v("jQuery.parseHTML")]),t._v("中使用。")])]),t._v(" "),s("h2",{attrs:{id:"动画队列——动画设计——动画实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动画队列——动画设计——动画实现"}},[t._v("#")]),t._v(" 动画队列——动画设计——动画实现")]),t._v(" "),s("h3",{attrs:{id:"_1-queue队列操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-queue队列操作"}},[t._v("#")]),t._v(" 1.queue队列操作")]),t._v(" "),s("p",[s("strong",[t._v("queue队列")]),t._v("：与data数据缓存，deferred异步模型一样，是jquery库的内部实现的基础设施，也是animate动画依赖的基础设施。"),s("br"),t._v("\n队列是一种特殊的线性表，只允许在表的前端（队头）进行删除操作（出队），在表的后端（队尾）进行插入操作（入队）。队列的特点是先进先出，即先进入先被删除。")]),t._v(" "),s("p",[s("strong",[t._v("Queue/dequeque")]),t._v(" ：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("queue")]),t._v(" ：传三个参数则是入队操作，第一个参数是绑定的元素，第二个是队列的别名，第三个是处理函数。传两个参数则是出队操作，第一个是元素，第二个是队列的别名。")]),t._v(" "),s("li",[s("strong",[t._v("Dequeue")]),t._v(" ：传入两个参数，第一个参数绑定的元素，第二个是队列名。每次通过dequeue调用，会执行第一个处理函数，并将已经执行了的第一个函数从队列中删除。dequeue可以通过在处理函数上添加next参数进行调用队列中的下一个处理函数。next是jQuery上的dequeue的一个引用。")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("队列上锁的操作：“inprogress”"),s("br"),t._v("\n在jQuery的实例对象上基于jQuery上的queue和dequeue扩展了同样名字的两个方法。")])]),t._v(" "),s("h3",{attrs:{id:"_2-animate定义与用法："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-animate定义与用法："}},[t._v("#")]),t._v(" 2.animate定义与用法：")]),t._v(" "),s("p",[t._v("animate方法执行css属性集的自定义动画。该方法通过过css样式将元素从一个状态改变为另一个状态、css属性值数逐渐改变的，这样就可以创建动画效果。"),s("br"),t._v("\nanimate的几个语法:"),s("br"),t._v("\n1.语法一：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("styles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("speed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("easing "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ul",[s("li",[t._v("1)styles:必需。规定产生动画效果的一个或多个css属性。")]),t._v(" "),s("li",[t._v("2）speed，可选。规定动画速度；")]),t._v(" "),s("li",[t._v("3）easing，可选，规定动画的不同点中元素的速度，默认值是“swing”。")]),t._v(" "),s("li",[t._v("4）callback ，可选，animate执行后要执行的函数。")])])]),t._v(" "),s("p",[t._v("2.语法二：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ul",[s("li",[t._v("1）styles 必需，与一中一致；")]),t._v(" "),s("li",[t._v("2）options：可选，规定动画的额外选项。可能值：speed easing callback step queue（布尔值）")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);